---
kubernetes:
  clusterrolebindings:
    cluster-admin:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: cluster-admin
        resourceVersion: '98'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/cluster-admin"
        uid: 78f09446-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:masters
    kubeadm:kubelet-bootstrap:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        creationTimestamp: '2019-01-11T15:35:09Z'
        name: kubeadm:kubelet-bootstrap
        resourceVersion: '164'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/kubeadm%3Akubelet-bootstrap"
        uid: 7a404797-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:node-bootstrapper
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:bootstrappers:kubeadm:default-node-token
    kubeadm:node-autoapprove-bootstrap:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        creationTimestamp: '2019-01-11T15:35:09Z'
        name: kubeadm:node-autoapprove-bootstrap
        resourceVersion: '165'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/kubeadm%3Anode-autoapprove-bootstrap"
        uid: 7a40ddf8-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:bootstrappers:kubeadm:default-node-token
    kubeadm:node-autoapprove-certificate-rotation:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        creationTimestamp: '2019-01-11T15:35:09Z'
        name: kubeadm:node-autoapprove-certificate-rotation
        resourceVersion: '166'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/kubeadm%3Anode-autoapprove-certificate-rotation"
        uid: 7a415135-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:nodes
    kubeadm:node-proxier:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        creationTimestamp: '2019-01-11T15:35:09Z'
        name: kubeadm:node-proxier
        resourceVersion: '179'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/kubeadm%3Anode-proxier"
        uid: 7a536219-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:node-proxier
      subjects:
      - kind: ServiceAccount
        name: kube-proxy
        namespace: kube-system
    minikube-rbac:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        creationTimestamp: '2019-01-11T15:35:13Z'
        name: minikube-rbac
        resourceVersion: '252'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/minikube-rbac"
        uid: 7cba345d-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: default
        namespace: kube-system
    opa-rbac-viewer:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"opa-rbac-viewer"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"view-rbac"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"system:serviceaccounts:opa"}]}

'
        creationTimestamp: '2019-01-11T17:46:45Z'
        name: opa-rbac-viewer
        resourceVersion: '7726'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/opa-rbac-viewer"
        uid: dca2e3d8-15c8-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: view-rbac
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:serviceaccounts:opa
    opa-rbac-viewer2:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"opa-rbac-viewer2"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"cluster-admin"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"system:serviceaccounts:opa"}]}

'
        creationTimestamp: '2019-01-11T20:01:28Z'
        name: opa-rbac-viewer2
        resourceVersion: '12214'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/opa-rbac-viewer2"
        uid: ae979dc4-15db-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:serviceaccounts:opa
    opa-viewer:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"opa-viewer"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"view"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"system:serviceaccounts:opa"}]}

'
        creationTimestamp: '2019-01-11T16:29:41Z'
        name: opa-viewer
        resourceVersion: '1702'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/opa-viewer"
        uid: 18d984ea-15be-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: view
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:serviceaccounts:opa
    storage-provisioner:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        creationTimestamp: '2019-01-11T15:35:17Z'
        labels:
          addonmanager.kubernetes.io/mode: EnsureExists
        name: storage-provisioner
        resourceVersion: '334'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/storage-provisioner"
        uid: 7f2eb657-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:persistent-volume-provisioner
      subjects:
      - kind: ServiceAccount
        name: storage-provisioner
        namespace: kube-system
    system:aws-cloud-provider:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:aws-cloud-provider
        resourceVersion: '106'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Aaws-cloud-provider"
        uid: 78f59a61-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:aws-cloud-provider
      subjects:
      - kind: ServiceAccount
        name: aws-cloud-provider
        namespace: kube-system
    system:basic-user:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:basic-user
        resourceVersion: '100'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Abasic-user"
        uid: 78f1a994-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:basic-user
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:authenticated
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:unauthenticated
    system:controller:attachdetach-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:attachdetach-controller
        resourceVersion: '109'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aattachdetach-controller"
        uid: 79004f0f-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:attachdetach-controller
      subjects:
      - kind: ServiceAccount
        name: attachdetach-controller
        namespace: kube-system
    system:controller:certificate-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:certificate-controller
        resourceVersion: '135'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Acertificate-controller"
        uid: 79868274-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:certificate-controller
      subjects:
      - kind: ServiceAccount
        name: certificate-controller
        namespace: kube-system
    system:controller:clusterrole-aggregation-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:clusterrole-aggregation-controller
        resourceVersion: '110'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aclusterrole-aggregation-controller"
        uid: 79066054-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:clusterrole-aggregation-controller
      subjects:
      - kind: ServiceAccount
        name: clusterrole-aggregation-controller
        namespace: kube-system
    system:controller:cronjob-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:cronjob-controller
        resourceVersion: '111'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Acronjob-controller"
        uid: 790c7d6a-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:cronjob-controller
      subjects:
      - kind: ServiceAccount
        name: cronjob-controller
        namespace: kube-system
    system:controller:daemon-set-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:daemon-set-controller
        resourceVersion: '112'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Adaemon-set-controller"
        uid: 7912d1cc-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:daemon-set-controller
      subjects:
      - kind: ServiceAccount
        name: daemon-set-controller
        namespace: kube-system
    system:controller:deployment-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:deployment-controller
        resourceVersion: '114'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Adeployment-controller"
        uid: 7918c00b-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:deployment-controller
      subjects:
      - kind: ServiceAccount
        name: deployment-controller
        namespace: kube-system
    system:controller:disruption-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:disruption-controller
        resourceVersion: '115'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Adisruption-controller"
        uid: 791eccd5-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:disruption-controller
      subjects:
      - kind: ServiceAccount
        name: disruption-controller
        namespace: kube-system
    system:controller:endpoint-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:endpoint-controller
        resourceVersion: '116'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aendpoint-controller"
        uid: 79250e80-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:endpoint-controller
      subjects:
      - kind: ServiceAccount
        name: endpoint-controller
        namespace: kube-system
    system:controller:generic-garbage-collector:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:generic-garbage-collector
        resourceVersion: '117'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Ageneric-garbage-collector"
        uid: 792afb8f-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:generic-garbage-collector
      subjects:
      - kind: ServiceAccount
        name: generic-garbage-collector
        namespace: kube-system
    system:controller:horizontal-pod-autoscaler:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:horizontal-pod-autoscaler
        resourceVersion: '118'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Ahorizontal-pod-autoscaler"
        uid: 793105b4-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:horizontal-pod-autoscaler
      subjects:
      - kind: ServiceAccount
        name: horizontal-pod-autoscaler
        namespace: kube-system
    system:controller:job-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:job-controller
        resourceVersion: '120'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Ajob-controller"
        uid: 79372a4b-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:job-controller
      subjects:
      - kind: ServiceAccount
        name: job-controller
        namespace: kube-system
    system:controller:namespace-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:namespace-controller
        resourceVersion: '121'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Anamespace-controller"
        uid: 793dd46a-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:namespace-controller
      subjects:
      - kind: ServiceAccount
        name: namespace-controller
        namespace: kube-system
    system:controller:node-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:node-controller
        resourceVersion: '122'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Anode-controller"
        uid: 794385e6-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:node-controller
      subjects:
      - kind: ServiceAccount
        name: node-controller
        namespace: kube-system
    system:controller:persistent-volume-binder:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:persistent-volume-binder
        resourceVersion: '123'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Apersistent-volume-binder"
        uid: 7949a005-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:persistent-volume-binder
      subjects:
      - kind: ServiceAccount
        name: persistent-volume-binder
        namespace: kube-system
    system:controller:pod-garbage-collector:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:pod-garbage-collector
        resourceVersion: '124'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Apod-garbage-collector"
        uid: 794fe5c8-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:pod-garbage-collector
      subjects:
      - kind: ServiceAccount
        name: pod-garbage-collector
        namespace: kube-system
    system:controller:pv-protection-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:pv-protection-controller
        resourceVersion: '138'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Apv-protection-controller"
        uid: 7992e1e2-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:pv-protection-controller
      subjects:
      - kind: ServiceAccount
        name: pv-protection-controller
        namespace: kube-system
    system:controller:pvc-protection-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:pvc-protection-controller
        resourceVersion: '136'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Apvc-protection-controller"
        uid: 798c9063-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:pvc-protection-controller
      subjects:
      - kind: ServiceAccount
        name: pvc-protection-controller
        namespace: kube-system
    system:controller:replicaset-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:replicaset-controller
        resourceVersion: '126'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Areplicaset-controller"
        uid: 79559abf-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:replicaset-controller
      subjects:
      - kind: ServiceAccount
        name: replicaset-controller
        namespace: kube-system
    system:controller:replication-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:replication-controller
        resourceVersion: '127'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Areplication-controller"
        uid: 795be87c-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:replication-controller
      subjects:
      - kind: ServiceAccount
        name: replication-controller
        namespace: kube-system
    system:controller:resourcequota-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:resourcequota-controller
        resourceVersion: '128'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aresourcequota-controller"
        uid: 796245ff-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:resourcequota-controller
      subjects:
      - kind: ServiceAccount
        name: resourcequota-controller
        namespace: kube-system
    system:controller:route-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:route-controller
        resourceVersion: '129'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aroute-controller"
        uid: 7967f296-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:route-controller
      subjects:
      - kind: ServiceAccount
        name: route-controller
        namespace: kube-system
    system:controller:service-account-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:service-account-controller
        resourceVersion: '130'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aservice-account-controller"
        uid: 796e27f6-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:service-account-controller
      subjects:
      - kind: ServiceAccount
        name: service-account-controller
        namespace: kube-system
    system:controller:service-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:service-controller
        resourceVersion: '132'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aservice-controller"
        uid: 7974602f-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:service-controller
      subjects:
      - kind: ServiceAccount
        name: service-controller
        namespace: kube-system
    system:controller:statefulset-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:statefulset-controller
        resourceVersion: '133'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Astatefulset-controller"
        uid: 797a5437-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:statefulset-controller
      subjects:
      - kind: ServiceAccount
        name: statefulset-controller
        namespace: kube-system
    system:controller:ttl-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:07Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:ttl-controller
        resourceVersion: '134'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Attl-controller"
        uid: 798051d5-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:ttl-controller
      subjects:
      - kind: ServiceAccount
        name: ttl-controller
        namespace: kube-system
    system:coredns:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        creationTimestamp: '2019-01-11T15:35:17Z'
        labels:
          addonmanager.kubernetes.io/mode: EnsureExists
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:coredns
        resourceVersion: '328'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acoredns"
        uid: 7f28a713-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:coredns
      subjects:
      - kind: ServiceAccount
        name: coredns
        namespace: kube-system
    system:discovery:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:discovery
        resourceVersion: '99'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Adiscovery"
        uid: 78f123e2-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:discovery
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:authenticated
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: system:unauthenticated
    system:kube-controller-manager:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:kube-controller-manager
        resourceVersion: '102'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Akube-controller-manager"
        uid: 78f302cd-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:kube-controller-manager
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: User
        name: system:kube-controller-manager
    system:kube-dns:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:kube-dns
        resourceVersion: '103'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Akube-dns"
        uid: 78f3dab8-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:kube-dns
      subjects:
      - kind: ServiceAccount
        name: kube-dns
        namespace: kube-system
    system:kube-scheduler:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:kube-scheduler
        resourceVersion: '104'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Akube-scheduler"
        uid: 78f4952f-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:kube-scheduler
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: User
        name: system:kube-scheduler
    system:nginx-ingress:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        creationTimestamp: '2019-01-11T15:35:17Z'
        labels:
          addonmanager.kubernetes.io/mode: EnsureExists
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:nginx-ingress
        resourceVersion: '333'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Anginx-ingress"
        uid: 7f2dce4a-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:nginx-ingress
      subjects:
      - kind: ServiceAccount
        name: nginx-ingress
        namespace: kube-system
    system:node:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:node
        resourceVersion: '107'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Anode"
        uid: 78f64692-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:node
      subjects:
    system:node-proxier:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:node-proxier
        resourceVersion: '101'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Anode-proxier"
        uid: 78f26167-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:node-proxier
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: User
        name: system:kube-proxy
    system:volume-scheduler:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:volume-scheduler
        resourceVersion: '108'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Avolume-scheduler"
        uid: 78fa4c27-15b6-11e9-b5fd-0800271e9936
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:volume-scheduler
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: User
        name: system:kube-scheduler
  clusterroles:
    admin:
      aggregationRule:
        clusterRoleSelectors:
        - matchLabels:
            rbac.authorization.k8s.io/aggregate-to-admin: 'true'
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: admin
        resourceVersion: '287'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/admin"
        uid: 78c9e3ac-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - pods
        - pods/attach
        - pods/exec
        - pods/portforward
        - pods/proxy
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - configmaps
        - endpoints
        - persistentvolumeclaims
        - replicationcontrollers
        - replicationcontrollers/scale
        - secrets
        - serviceaccounts
        - services
        - services/proxy
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - bindings
        - events
        - limitranges
        - namespaces/status
        - pods/log
        - pods/status
        - replicationcontrollers/status
        - resourcequotas
        - resourcequotas/status
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - namespaces
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - serviceaccounts
        verbs:
        - impersonate
      - apiGroups:
        - apps
        resources:
        - daemonsets
        - deployments
        - deployments/rollback
        - deployments/scale
        - replicasets
        - replicasets/scale
        - statefulsets
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - batch
        resources:
        - cronjobs
        - jobs
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - extensions
        resources:
        - daemonsets
        - deployments
        - deployments/rollback
        - deployments/scale
        - ingresses
        - networkpolicies
        - replicasets
        - replicasets/scale
        - replicationcontrollers/scale
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - policy
        resources:
        - poddisruptionbudgets
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - networking.k8s.io
        resources:
        - networkpolicies
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - authorization.k8s.io
        resources:
        - localsubjectaccessreviews
        verbs:
        - create
      - apiGroups:
        - rbac.authorization.k8s.io
        resources:
        - rolebindings
        - roles
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
    cluster-admin:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:02Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: cluster-admin
        resourceVersion: '13'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/cluster-admin"
        uid: 7664f473-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - "*"
        resources:
        - "*"
        verbs:
        - "*"
      - nonResourceURLs:
        - "*"
        verbs:
        - "*"
    edit:
      aggregationRule:
        clusterRoleSelectors:
        - matchLabels:
            rbac.authorization.k8s.io/aggregate-to-edit: 'true'
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: edit
        resourceVersion: '288'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/edit"
        uid: 78ccc0fb-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - pods
        - pods/attach
        - pods/exec
        - pods/portforward
        - pods/proxy
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - configmaps
        - endpoints
        - persistentvolumeclaims
        - replicationcontrollers
        - replicationcontrollers/scale
        - secrets
        - serviceaccounts
        - services
        - services/proxy
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - bindings
        - events
        - limitranges
        - namespaces/status
        - pods/log
        - pods/status
        - replicationcontrollers/status
        - resourcequotas
        - resourcequotas/status
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - namespaces
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - serviceaccounts
        verbs:
        - impersonate
      - apiGroups:
        - apps
        resources:
        - daemonsets
        - deployments
        - deployments/rollback
        - deployments/scale
        - replicasets
        - replicasets/scale
        - statefulsets
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - batch
        resources:
        - cronjobs
        - jobs
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - extensions
        resources:
        - daemonsets
        - deployments
        - deployments/rollback
        - deployments/scale
        - ingresses
        - networkpolicies
        - replicasets
        - replicasets/scale
        - replicationcontrollers/scale
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - policy
        resources:
        - poddisruptionbudgets
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - networking.k8s.io
        resources:
        - networkpolicies
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
    system:aggregate-to-admin:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
          rbac.authorization.k8s.io/aggregate-to-admin: 'true'
        name: system:aggregate-to-admin
        resourceVersion: '53'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aaggregate-to-admin"
        uid: 78ce4ad3-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - pods
        - pods/attach
        - pods/exec
        - pods/portforward
        - pods/proxy
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - configmaps
        - endpoints
        - persistentvolumeclaims
        - replicationcontrollers
        - replicationcontrollers/scale
        - secrets
        - serviceaccounts
        - services
        - services/proxy
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - bindings
        - events
        - limitranges
        - namespaces/status
        - pods/log
        - pods/status
        - replicationcontrollers/status
        - resourcequotas
        - resourcequotas/status
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - namespaces
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - serviceaccounts
        verbs:
        - impersonate
      - apiGroups:
        - apps
        resources:
        - daemonsets
        - deployments
        - deployments/rollback
        - deployments/scale
        - replicasets
        - replicasets/scale
        - statefulsets
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - batch
        resources:
        - cronjobs
        - jobs
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - extensions
        resources:
        - daemonsets
        - deployments
        - deployments/rollback
        - deployments/scale
        - ingresses
        - networkpolicies
        - replicasets
        - replicasets/scale
        - replicationcontrollers/scale
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - policy
        resources:
        - poddisruptionbudgets
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - networking.k8s.io
        resources:
        - networkpolicies
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - authorization.k8s.io
        resources:
        - localsubjectaccessreviews
        verbs:
        - create
      - apiGroups:
        - rbac.authorization.k8s.io
        resources:
        - rolebindings
        - roles
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
    system:aggregate-to-edit:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
          rbac.authorization.k8s.io/aggregate-to-edit: 'true'
        name: system:aggregate-to-edit
        resourceVersion: '54'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aaggregate-to-edit"
        uid: 78cf2d91-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - pods
        - pods/attach
        - pods/exec
        - pods/portforward
        - pods/proxy
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - configmaps
        - endpoints
        - persistentvolumeclaims
        - replicationcontrollers
        - replicationcontrollers/scale
        - secrets
        - serviceaccounts
        - services
        - services/proxy
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - bindings
        - events
        - limitranges
        - namespaces/status
        - pods/log
        - pods/status
        - replicationcontrollers/status
        - resourcequotas
        - resourcequotas/status
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - namespaces
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - serviceaccounts
        verbs:
        - impersonate
      - apiGroups:
        - apps
        resources:
        - daemonsets
        - deployments
        - deployments/rollback
        - deployments/scale
        - replicasets
        - replicasets/scale
        - statefulsets
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - batch
        resources:
        - cronjobs
        - jobs
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - extensions
        resources:
        - daemonsets
        - deployments
        - deployments/rollback
        - deployments/scale
        - ingresses
        - networkpolicies
        - replicasets
        - replicasets/scale
        - replicationcontrollers/scale
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - policy
        resources:
        - poddisruptionbudgets
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - networking.k8s.io
        resources:
        - networkpolicies
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch
    system:aggregate-to-view:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
          rbac.authorization.k8s.io/aggregate-to-view: 'true'
        name: system:aggregate-to-view
        resourceVersion: '55'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aaggregate-to-view"
        uid: 78cfe37a-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - configmaps
        - endpoints
        - persistentvolumeclaims
        - pods
        - replicationcontrollers
        - replicationcontrollers/scale
        - serviceaccounts
        - services
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - bindings
        - events
        - limitranges
        - namespaces/status
        - pods/log
        - pods/status
        - replicationcontrollers/status
        - resourcequotas
        - resourcequotas/status
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - namespaces
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - daemonsets
        - deployments
        - deployments/scale
        - replicasets
        - replicasets/scale
        - statefulsets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - batch
        resources:
        - cronjobs
        - jobs
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - extensions
        resources:
        - daemonsets
        - deployments
        - deployments/scale
        - ingresses
        - networkpolicies
        - replicasets
        - replicasets/scale
        - replicationcontrollers/scale
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - policy
        resources:
        - poddisruptionbudgets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - networking.k8s.io
        resources:
        - networkpolicies
        verbs:
        - get
        - list
        - watch
    system:auth-delegator:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:auth-delegator
        resourceVersion: '63'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aauth-delegator"
        uid: 78d73731-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - authentication.k8s.io
        resources:
        - tokenreviews
        verbs:
        - create
      - apiGroups:
        - authorization.k8s.io
        resources:
        - subjectaccessreviews
        verbs:
        - create
    system:aws-cloud-provider:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:aws-cloud-provider
        resourceVersion: '69'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aaws-cloud-provider"
        uid: 78dcff9d-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - get
        - patch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:basic-user:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:basic-user
        resourceVersion: '49'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Abasic-user"
        uid: 78c967c2-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - authorization.k8s.io
        resources:
        - selfsubjectaccessreviews
        - selfsubjectrulesreviews
        verbs:
        - create
    system:certificates.k8s.io:certificatesigningrequests:nodeclient:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
        resourceVersion: '70'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acertificates.k8s.io%3Acertificatesigningrequests%3Anodeclient"
        uid: 78dd949a-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - certificates.k8s.io
        resources:
        - certificatesigningrequests/nodeclient
        verbs:
        - create
    system:certificates.k8s.io:certificatesigningrequests:selfnodeclient:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
        resourceVersion: '71'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acertificates.k8s.io%3Acertificatesigningrequests%3Aselfnodeclient"
        uid: 78de1217-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - certificates.k8s.io
        resources:
        - certificatesigningrequests/selfnodeclient
        verbs:
        - create
    system:controller:attachdetach-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:attachdetach-controller
        resourceVersion: '73'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aattachdetach-controller"
        uid: 78df9e96-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - persistentvolumeclaims
        - persistentvolumes
        verbs:
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - nodes/status
        verbs:
        - patch
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
      - apiGroups:
        - storage.k8s.io
        resources:
        - volumeattachments
        verbs:
        - create
        - delete
        - get
        - list
        - watch
    system:controller:certificate-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:certificate-controller
        resourceVersion: '95'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Acertificate-controller"
        uid: 78ee4582-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - certificates.k8s.io
        resources:
        - certificatesigningrequests
        verbs:
        - delete
        - get
        - list
        - watch
      - apiGroups:
        - certificates.k8s.io
        resources:
        - certificatesigningrequests/approval
        - certificatesigningrequests/status
        verbs:
        - update
      - apiGroups:
        - authorization.k8s.io
        resources:
        - subjectaccessreviews
        verbs:
        - create
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:clusterrole-aggregation-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:clusterrole-aggregation-controller
        resourceVersion: '74'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aclusterrole-aggregation-controller"
        uid: 78e0485b-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - "*"
        resources:
        - "*"
        verbs:
        - "*"
      - nonResourceURLs:
        - "*"
        verbs:
        - "*"
    system:controller:cronjob-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:cronjob-controller
        resourceVersion: '75'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Acronjob-controller"
        uid: 78e0c83e-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - batch
        resources:
        - cronjobs
        verbs:
        - get
        - list
        - update
        - watch
      - apiGroups:
        - batch
        resources:
        - jobs
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - batch
        resources:
        - cronjobs/status
        verbs:
        - update
      - apiGroups:
        - batch
        resources:
        - cronjobs/finalizers
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - delete
        - list
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:daemon-set-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:daemon-set-controller
        resourceVersion: '76'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Adaemon-set-controller"
        uid: 78e1633e-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - apps
        - extensions
        resources:
        - daemonsets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        - extensions
        resources:
        - daemonsets/status
        verbs:
        - update
      - apiGroups:
        - apps
        - extensions
        resources:
        - daemonsets/finalizers
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - create
        - delete
        - list
        - patch
        - watch
      - apiGroups:
        - ''
        resources:
        - pods/binding
        verbs:
        - create
      - apiGroups:
        - apps
        resources:
        - controllerrevisions
        verbs:
        - create
        - delete
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:deployment-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:deployment-controller
        resourceVersion: '77'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Adeployment-controller"
        uid: 78e22749-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - apps
        - extensions
        resources:
        - deployments
        verbs:
        - get
        - list
        - update
        - watch
      - apiGroups:
        - apps
        - extensions
        resources:
        - deployments/status
        verbs:
        - update
      - apiGroups:
        - apps
        - extensions
        resources:
        - deployments/finalizers
        verbs:
        - update
      - apiGroups:
        - apps
        - extensions
        resources:
        - replicasets
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - get
        - list
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:disruption-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:disruption-controller
        resourceVersion: '78'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Adisruption-controller"
        uid: 78e2bcb0-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - apps
        - extensions
        resources:
        - deployments
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        - extensions
        resources:
        - replicasets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - replicationcontrollers
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - policy
        resources:
        - poddisruptionbudgets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - statefulsets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - policy
        resources:
        - poddisruptionbudgets/status
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:endpoint-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:endpoint-controller
        resourceVersion: '79'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aendpoint-controller"
        uid: 78e363cf-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - pods
        - services
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - endpoints
        verbs:
        - create
        - delete
        - get
        - list
        - update
      - apiGroups:
        - ''
        resources:
        - endpoints/restricted
        verbs:
        - create
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:generic-garbage-collector:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:generic-garbage-collector
        resourceVersion: '80'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Ageneric-garbage-collector"
        uid: 78e487cc-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - "*"
        resources:
        - "*"
        verbs:
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:horizontal-pod-autoscaler:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:horizontal-pod-autoscaler
        resourceVersion: '81'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Ahorizontal-pod-autoscaler"
        uid: 78e5190b-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers/status
        verbs:
        - update
      - apiGroups:
        - "*"
        resources:
        - "*/scale"
        verbs:
        - get
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - list
      - apiGroups:
        - ''
        resourceNames:
        - 'http:heapster:'
        - 'https:heapster:'
        resources:
        - services/proxy
        verbs:
        - get
      - apiGroups:
        - metrics.k8s.io
        resources:
        - pods
        verbs:
        - list
      - apiGroups:
        - custom.metrics.k8s.io
        resources:
        - "*"
        verbs:
        - get
        - list
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:job-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:job-controller
        resourceVersion: '82'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Ajob-controller"
        uid: 78e5d052-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - batch
        resources:
        - jobs
        verbs:
        - get
        - list
        - update
        - watch
      - apiGroups:
        - batch
        resources:
        - jobs/status
        verbs:
        - update
      - apiGroups:
        - batch
        resources:
        - jobs/finalizers
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - create
        - delete
        - list
        - patch
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:namespace-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:namespace-controller
        resourceVersion: '83'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Anamespace-controller"
        uid: 78e68edc-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - namespaces
        verbs:
        - delete
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - namespaces/finalize
        - namespaces/status
        verbs:
        - update
      - apiGroups:
        - "*"
        resources:
        - "*"
        verbs:
        - delete
        - deletecollection
        - get
        - list
    system:controller:node-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:node-controller
        resourceVersion: '84'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Anode-controller"
        uid: 78e79ea4-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - delete
        - get
        - list
        - patch
        - update
      - apiGroups:
        - ''
        resources:
        - nodes/status
        verbs:
        - patch
        - update
      - apiGroups:
        - ''
        resources:
        - pods/status
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - delete
        - list
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:persistent-volume-binder:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:persistent-volume-binder
        resourceVersion: '85'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Apersistent-volume-binder"
        uid: 78e85647-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - persistentvolumes
        verbs:
        - create
        - delete
        - get
        - list
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - persistentvolumes/status
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - persistentvolumeclaims
        verbs:
        - get
        - list
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - persistentvolumeclaims/status
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - create
        - delete
        - get
        - list
        - watch
      - apiGroups:
        - storage.k8s.io
        resources:
        - storageclasses
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - endpoints
        - services
        verbs:
        - create
        - delete
        - get
      - apiGroups:
        - ''
        resources:
        - secrets
        verbs:
        - get
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - get
        - list
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:pod-garbage-collector:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:pod-garbage-collector
        resourceVersion: '86'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Apod-garbage-collector"
        uid: 78e8ee81-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - delete
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - list
    system:controller:pv-protection-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:pv-protection-controller
        resourceVersion: '97'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Apv-protection-controller"
        uid: 78effcea-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - persistentvolumes
        verbs:
        - get
        - list
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:pvc-protection-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:pvc-protection-controller
        resourceVersion: '96'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Apvc-protection-controller"
        uid: 78ef0a11-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - persistentvolumeclaims
        verbs:
        - get
        - list
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:replicaset-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:replicaset-controller
        resourceVersion: '87'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Areplicaset-controller"
        uid: 78e98a1f-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - apps
        - extensions
        resources:
        - replicasets
        verbs:
        - get
        - list
        - update
        - watch
      - apiGroups:
        - apps
        - extensions
        resources:
        - replicasets/status
        verbs:
        - update
      - apiGroups:
        - apps
        - extensions
        resources:
        - replicasets/finalizers
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - create
        - delete
        - list
        - patch
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:replication-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:replication-controller
        resourceVersion: '88'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Areplication-controller"
        uid: 78ea3199-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - replicationcontrollers
        verbs:
        - get
        - list
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - replicationcontrollers/status
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - replicationcontrollers/finalizers
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - create
        - delete
        - list
        - patch
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:resourcequota-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:resourcequota-controller
        resourceVersion: '89'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aresourcequota-controller"
        uid: 78ead3c5-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - "*"
        resources:
        - "*"
        verbs:
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - resourcequotas/status
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:route-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:route-controller
        resourceVersion: '90'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aroute-controller"
        uid: 78eb644e-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - nodes/status
        verbs:
        - patch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:service-account-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:service-account-controller
        resourceVersion: '91'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aservice-account-controller"
        uid: 78ebe8e1-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - serviceaccounts
        verbs:
        - create
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:service-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:service-controller
        resourceVersion: '92'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aservice-controller"
        uid: 78ec7f93-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - services
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - services/status
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:statefulset-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:statefulset-controller
        resourceVersion: '93'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Astatefulset-controller"
        uid: 78ed0b5a-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - statefulsets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - statefulsets/status
        verbs:
        - update
      - apiGroups:
        - apps
        resources:
        - statefulsets/finalizers
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - create
        - delete
        - get
        - patch
        - update
      - apiGroups:
        - apps
        resources:
        - controllerrevisions
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - persistentvolumeclaims
        verbs:
        - create
        - get
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:controller:ttl-controller:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:controller:ttl-controller
        resourceVersion: '94'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Attl-controller"
        uid: 78ed95e7-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:coredns:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/bootstrapping":"rbac-defaults"},"name":"system:coredns","namespace":""},"rules":[{"apiGroups":[""],"resources":["endpoints","services","pods","namespaces"],"verbs":["list","watch"]}]}

'
        creationTimestamp: '2019-01-11T15:35:17Z'
        labels:
          addonmanager.kubernetes.io/mode: Reconcile
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:coredns
        resourceVersion: '335'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acoredns"
        uid: 7f726bab-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - endpoints
        - services
        - pods
        - namespaces
        verbs:
        - list
        - watch
    system:discovery:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:discovery
        resourceVersion: '48'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Adiscovery"
        uid: 78c8b13f-15b6-11e9-b5fd-0800271e9936
      rules:
      - nonResourceURLs:
        - "/api"
        - "/api/*"
        - "/apis"
        - "/apis/*"
        - "/healthz"
        - "/openapi"
        - "/openapi/*"
        - "/swagger-2.0.0.pb-v1"
        - "/swagger.json"
        - "/swaggerapi"
        - "/swaggerapi/*"
        - "/version"
        - "/version/"
        verbs:
        - get
    system:heapster:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:heapster
        resourceVersion: '56'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aheapster"
        uid: 78d089cc-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - events
        - namespaces
        - nodes
        - pods
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - extensions
        resources:
        - deployments
        verbs:
        - get
        - list
        - watch
    system:kube-aggregator:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:kube-aggregator
        resourceVersion: '64'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Akube-aggregator"
        uid: 78d7e0fc-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - endpoints
        - services
        verbs:
        - get
        - list
        - watch
    system:kube-controller-manager:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:kube-controller-manager
        resourceVersion: '65'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Akube-controller-manager"
        uid: 78d97695-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
      - apiGroups:
        - ''
        resources:
        - endpoints
        - secrets
        - serviceaccounts
        verbs:
        - create
      - apiGroups:
        - ''
        resources:
        - secrets
        verbs:
        - delete
      - apiGroups:
        - ''
        resources:
        - endpoints
        - namespaces
        - secrets
        - serviceaccounts
        verbs:
        - get
      - apiGroups:
        - ''
        resources:
        - endpoints
        - secrets
        - serviceaccounts
        verbs:
        - update
      - apiGroups:
        - authentication.k8s.io
        resources:
        - tokenreviews
        verbs:
        - create
      - apiGroups:
        - "*"
        resources:
        - "*"
        verbs:
        - list
        - watch
    system:kube-dns:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:kube-dns
        resourceVersion: '67'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Akube-dns"
        uid: 78dbbd26-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - endpoints
        - services
        verbs:
        - list
        - watch
    system:kube-scheduler:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:kube-scheduler
        resourceVersion: '66'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Akube-scheduler"
        uid: 78da0b58-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
      - apiGroups:
        - ''
        resources:
        - endpoints
        verbs:
        - create
      - apiGroups:
        - ''
        resourceNames:
        - kube-scheduler
        resources:
        - endpoints
        verbs:
        - delete
        - get
        - patch
        - update
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - delete
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - bindings
        - pods/binding
        verbs:
        - create
      - apiGroups:
        - ''
        resources:
        - pods/status
        verbs:
        - patch
        - update
      - apiGroups:
        - ''
        resources:
        - replicationcontrollers
        - services
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        - extensions
        resources:
        - replicasets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - statefulsets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - policy
        resources:
        - poddisruptionbudgets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - persistentvolumeclaims
        - persistentvolumes
        verbs:
        - get
        - list
        - watch
    system:kubelet-api-admin:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:kubelet-api-admin
        resourceVersion: '60'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Akubelet-api-admin"
        uid: 78d47325-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - proxy
      - apiGroups:
        - ''
        resources:
        - nodes/log
        - nodes/metrics
        - nodes/proxy
        - nodes/spec
        - nodes/stats
        verbs:
        - "*"
    system:nginx-ingress:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1beta1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/bootstrapping":"rbac-defaults"},"name":"system:nginx-ingress","namespace":""},"rules":[{"apiGroups":[""],"resources":["configmaps","endpoints","nodes","pods","secrets"],"verbs":["list","watch"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get"]},{"apiGroups":[""],"resources":["services"],"verbs":["get","list","watch"]},{"apiGroups":["extensions"],"resources":["ingresses"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","patch"]},{"apiGroups":["extensions"],"resources":["ingresses/status"],"verbs":["update"]}]}

'
        creationTimestamp: '2019-01-11T15:35:18Z'
        labels:
          addonmanager.kubernetes.io/mode: Reconcile
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:nginx-ingress
        resourceVersion: '388'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Anginx-ingress"
        uid: 7fbfa1e4-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - configmaps
        - endpoints
        - nodes
        - pods
        - secrets
        verbs:
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - get
      - apiGroups:
        - ''
        resources:
        - services
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - extensions
        resources:
        - ingresses
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
      - apiGroups:
        - extensions
        resources:
        - ingresses/status
        verbs:
        - update
    system:node:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:node
        resourceVersion: '57'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Anode"
        uid: 78d168b2-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - authentication.k8s.io
        resources:
        - tokenreviews
        verbs:
        - create
      - apiGroups:
        - authorization.k8s.io
        resources:
        - localsubjectaccessreviews
        - subjectaccessreviews
        verbs:
        - create
      - apiGroups:
        - ''
        resources:
        - services
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - create
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - nodes/status
        verbs:
        - patch
        - update
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - delete
        - patch
        - update
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - create
        - delete
      - apiGroups:
        - ''
        resources:
        - pods/status
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - pods/eviction
        verbs:
        - create
      - apiGroups:
        - ''
        resources:
        - configmaps
        - secrets
        verbs:
        - get
      - apiGroups:
        - ''
        resources:
        - persistentvolumeclaims
        - persistentvolumes
        verbs:
        - get
      - apiGroups:
        - ''
        resources:
        - endpoints
        verbs:
        - get
      - apiGroups:
        - certificates.k8s.io
        resources:
        - certificatesigningrequests
        verbs:
        - create
        - get
        - list
        - watch
      - apiGroups:
        - storage.k8s.io
        resources:
        - volumeattachments
        verbs:
        - get
    system:node-bootstrapper:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:node-bootstrapper
        resourceVersion: '61'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Anode-bootstrapper"
        uid: 78d51717-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - certificates.k8s.io
        resources:
        - certificatesigningrequests
        verbs:
        - create
        - get
        - list
        - watch
    system:node-problem-detector:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:node-problem-detector
        resourceVersion: '58'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Anode-problem-detector"
        uid: 78d23ae1-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - get
      - apiGroups:
        - ''
        resources:
        - nodes/status
        verbs:
        - patch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:node-proxier:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:node-proxier
        resourceVersion: '59'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Anode-proxier"
        uid: 78d3883f-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - endpoints
        - services
        verbs:
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - nodes
        verbs:
        - get
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:persistent-volume-provisioner:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:persistent-volume-provisioner
        resourceVersion: '68'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Apersistent-volume-provisioner"
        uid: 78dc71ff-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - persistentvolumes
        verbs:
        - create
        - delete
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - persistentvolumeclaims
        verbs:
        - get
        - list
        - update
        - watch
      - apiGroups:
        - storage.k8s.io
        resources:
        - storageclasses
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - watch
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - create
        - patch
        - update
    system:volume-scheduler:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:volume-scheduler
        resourceVersion: '72'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Avolume-scheduler"
        uid: 78de8a5f-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - persistentvolumes
        verbs:
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - storage.k8s.io
        resources:
        - storageclasses
        verbs:
        - get
        - list
        - watch
    view:
      aggregationRule:
        clusterRoleSelectors:
        - matchLabels:
            rbac.authorization.k8s.io/aggregate-to-view: 'true'
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: 'true'
        creationTimestamp: '2019-01-11T15:35:06Z'
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: view
        resourceVersion: '286'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/view"
        uid: 78cd8cc7-15b6-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - ''
        resources:
        - configmaps
        - endpoints
        - persistentvolumeclaims
        - pods
        - replicationcontrollers
        - replicationcontrollers/scale
        - serviceaccounts
        - services
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - bindings
        - events
        - limitranges
        - namespaces/status
        - pods/log
        - pods/status
        - replicationcontrollers/status
        - resourcequotas
        - resourcequotas/status
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - namespaces
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - daemonsets
        - deployments
        - deployments/scale
        - replicasets
        - replicasets/scale
        - statefulsets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - batch
        resources:
        - cronjobs
        - jobs
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - extensions
        resources:
        - daemonsets
        - deployments
        - deployments/scale
        - ingresses
        - networkpolicies
        - replicasets
        - replicasets/scale
        - replicationcontrollers/scale
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - policy
        resources:
        - poddisruptionbudgets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - networking.k8s.io
        resources:
        - networkpolicies
        verbs:
        - get
        - list
        - watch
    view-rbac:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"view-rbac"},"rules":[{"apiGroups":["rbac.authorization.k8.io/v1"],"resources":["rolebindings","clusterrolebindings"],"verbs":["get","list","watch"]}]}

'
        creationTimestamp: '2019-01-11T18:01:59Z'
        name: view-rbac
        resourceVersion: '11919'
        selfLink: "/apis/rbac.authorization.k8s.io/v1/clusterroles/view-rbac"
        uid: fdd9b64c-15ca-11e9-b5fd-0800271e9936
      rules:
      - apiGroups:
        - rbac.authorization.k8.io/v1
        resources:
        - rolebindings
        - clusterrolebindings
        verbs:
        - get
        - list
        - watch
  ingresses:
    production:
      ingress-ok:
        apiVersion: extensions/v1beta1
        kind: Ingress
        metadata:
          creationTimestamp: '2019-01-11T16:34:10Z'
          generation: 1
          name: ingress-ok
          namespace: production
          resourceVersion: '2086'
          selfLink: "/apis/extensions/v1beta1/namespaces/production/ingresses/ingress-ok"
          uid: b9379b74-15be-11e9-b5fd-0800271e9936
        spec:
          rules:
          - host: signin.acmecorp.com
            http:
              paths:
              - backend:
                  serviceName: nginx
                  servicePort: 80
        status:
          loadBalancer:
            ingress:
            - ip: 10.0.2.15
  namespaces:
    default:
      apiVersion: v1
      kind: Namespace
      metadata:
        creationTimestamp: '2019-01-11T15:35:01Z'
        name: default
        resourceVersion: '12'
        selfLink: "/api/v1/namespaces/default"
        uid: 7602b9c6-15b6-11e9-b5fd-0800271e9936
      spec:
        finalizers:
        - kubernetes
      status:
        phase: Active
    kube-public:
      apiVersion: v1
      kind: Namespace
      metadata:
        creationTimestamp: '2019-01-11T15:35:05Z'
        name: kube-public
        resourceVersion: '35'
        selfLink: "/api/v1/namespaces/kube-public"
        uid: 786a91f5-15b6-11e9-b5fd-0800271e9936
      spec:
        finalizers:
        - kubernetes
      status:
        phase: Active
    kube-system:
      apiVersion: v1
      kind: Namespace
      metadata:
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"name":"kube-system","namespace":""}}

'
        creationTimestamp: '2019-01-11T15:35:01Z'
        name: kube-system
        resourceVersion: '11'
        selfLink: "/api/v1/namespaces/kube-system"
        uid: 760295be-15b6-11e9-b5fd-0800271e9936
      spec:
        finalizers:
        - kubernetes
      status:
        phase: Active
    opa:
      apiVersion: v1
      kind: Namespace
      metadata:
        creationTimestamp: '2019-01-11T16:28:01Z'
        name: opa
        resourceVersion: '1576'
        selfLink: "/api/v1/namespaces/opa"
        uid: dd6d880a-15bd-11e9-b5fd-0800271e9936
      spec:
        finalizers:
        - kubernetes
      status:
        phase: Active
    production:
      apiVersion: v1
      kind: Namespace
      metadata:
        annotations:
          ingress-whitelist: "*.acmecorp.com"
        creationTimestamp: '2019-01-11T16:33:32Z'
        name: production
        resourceVersion: '2029'
        selfLink: "/api/v1/namespaces/production"
        uid: a29143cc-15be-11e9-b5fd-0800271e9936
      spec:
        finalizers:
        - kubernetes
      status:
        phase: Active
    qa:
      apiVersion: v1
      kind: Namespace
      metadata:
        annotations:
          ingress-whitelist: "*.qa.acmecorp.com,*.internal.acmecorp.com"
        creationTimestamp: '2019-01-11T16:33:27Z'
        name: qa
        resourceVersion: '2019'
        selfLink: "/api/v1/namespaces/qa"
        uid: 9f39bcf0-15be-11e9-b5fd-0800271e9936
      spec:
        finalizers:
        - kubernetes
      status:
        phase: Active
  rolebindings:
    kube-public:
      kubeadm:bootstrap-signer-clusterinfo:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          creationTimestamp: '2019-01-11T15:35:09Z'
          name: kubeadm:bootstrap-signer-clusterinfo
          namespace: kube-public
          resourceVersion: '169'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-public/rolebindings/kubeadm%3Abootstrap-signer-clusterinfo"
          uid: 7a4306f3-15b6-11e9-b5fd-0800271e9936
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: kubeadm:bootstrap-signer-clusterinfo
        subjects:
        - apiGroup: rbac.authorization.k8s.io
          kind: User
          name: system:anonymous
      system:controller:bootstrap-signer:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system:controller:bootstrap-signer
          namespace: kube-public
          resourceVersion: '155'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-public/rolebindings/system%3Acontroller%3Abootstrap-signer"
          uid: 79e21a48-15b6-11e9-b5fd-0800271e9936
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: system:controller:bootstrap-signer
        subjects:
        - kind: ServiceAccount
          name: bootstrap-signer
          namespace: kube-system
    kube-system:
      system::leader-locking-kube-controller-manager:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system::leader-locking-kube-controller-manager
          namespace: kube-system
          resourceVersion: '149'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system%3A%3Aleader-locking-kube-controller-manager"
          uid: 79c3991e-15b6-11e9-b5fd-0800271e9936
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: system::leader-locking-kube-controller-manager
        subjects:
        - kind: ServiceAccount
          name: kube-controller-manager
          namespace: kube-system
      system::leader-locking-kube-scheduler:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system::leader-locking-kube-scheduler
          namespace: kube-system
          resourceVersion: '150'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system%3A%3Aleader-locking-kube-scheduler"
          uid: 79c9c24a-15b6-11e9-b5fd-0800271e9936
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: system::leader-locking-kube-scheduler
        subjects:
        - kind: ServiceAccount
          name: kube-scheduler
          namespace: kube-system
      system::nginx-ingress-role-binding:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          creationTimestamp: '2019-01-11T15:35:17Z'
          labels:
            addonmanager.kubernetes.io/mode: EnsureExists
            kubernetes.io/bootstrapping: rbac-defaults
          name: system::nginx-ingress-role-binding
          namespace: kube-system
          resourceVersion: '332'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system%3A%3Anginx-ingress-role-binding"
          uid: 7f2cc236-15b6-11e9-b5fd-0800271e9936
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: system::nginx-ingress-role
        subjects:
        - kind: ServiceAccount
          name: nginx-ingress
          namespace: kube-system
      system:controller:bootstrap-signer:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system:controller:bootstrap-signer
          namespace: kube-system
          resourceVersion: '152'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system%3Acontroller%3Abootstrap-signer"
          uid: 79d002a9-15b6-11e9-b5fd-0800271e9936
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: system:controller:bootstrap-signer
        subjects:
        - kind: ServiceAccount
          name: bootstrap-signer
          namespace: kube-system
      system:controller:cloud-provider:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system:controller:cloud-provider
          namespace: kube-system
          resourceVersion: '153'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system%3Acontroller%3Acloud-provider"
          uid: 79d5e1f2-15b6-11e9-b5fd-0800271e9936
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: system:controller:cloud-provider
        subjects:
        - kind: ServiceAccount
          name: cloud-provider
          namespace: kube-system
      system:controller:token-cleaner:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system:controller:token-cleaner
          namespace: kube-system
          resourceVersion: '154'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system%3Acontroller%3Atoken-cleaner"
          uid: 79dc0280-15b6-11e9-b5fd-0800271e9936
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: system:controller:token-cleaner
        subjects:
        - kind: ServiceAccount
          name: token-cleaner
          namespace: kube-system
    opa:
      opa-configmap-modifier:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"opa-configmap-modifier","namespace":"opa"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"configmap-modifier"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"system:serviceaccounts:opa"}]}

'
          creationTimestamp: '2019-01-11T16:29:41Z'
          name: opa-configmap-modifier
          namespace: opa
          resourceVersion: '1705'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/opa/rolebindings/opa-configmap-modifier"
          uid: 18de3cbf-15be-11e9-b5fd-0800271e9936
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: configmap-modifier
        subjects:
        - apiGroup: rbac.authorization.k8s.io
          kind: Group
          name: system:serviceaccounts:opa
  roles:
    kube-public:
      kubeadm:bootstrap-signer-clusterinfo:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: '2019-01-11T15:35:09Z'
          name: kubeadm:bootstrap-signer-clusterinfo
          namespace: kube-public
          resourceVersion: '168'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-public/roles/kubeadm%3Abootstrap-signer-clusterinfo"
          uid: 7a427864-15b6-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - ''
          resourceNames:
          - cluster-info
          resources:
          - configmaps
          verbs:
          - get
      system:controller:bootstrap-signer:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system:controller:bootstrap-signer
          namespace: kube-public
          resourceVersion: '148'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-public/roles/system%3Acontroller%3Abootstrap-signer"
          uid: 79bd8350-15b6-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - ''
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ''
          resourceNames:
          - cluster-info
          resources:
          - configmaps
          verbs:
          - update
        - apiGroups:
          - ''
          resources:
          - events
          verbs:
          - create
          - patch
          - update
    kube-system:
      extension-apiserver-authentication-reader:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:07Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: extension-apiserver-authentication-reader
          namespace: kube-system
          resourceVersion: '139'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/extension-apiserver-authentication-reader"
          uid: 7998c9a1-15b6-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - ''
          resourceNames:
          - extension-apiserver-authentication
          resources:
          - configmaps
          verbs:
          - get
      system::leader-locking-kube-controller-manager:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system::leader-locking-kube-controller-manager
          namespace: kube-system
          resourceVersion: '146'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system%3A%3Aleader-locking-kube-controller-manager"
          uid: 79b15636-15b6-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - ''
          resources:
          - configmaps
          verbs:
          - watch
        - apiGroups:
          - ''
          resourceNames:
          - kube-controller-manager
          resources:
          - configmaps
          verbs:
          - get
          - update
      system::leader-locking-kube-scheduler:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system::leader-locking-kube-scheduler
          namespace: kube-system
          resourceVersion: '147'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system%3A%3Aleader-locking-kube-scheduler"
          uid: 79b762d0-15b6-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - ''
          resources:
          - configmaps
          verbs:
          - watch
        - apiGroups:
          - ''
          resourceNames:
          - kube-scheduler
          resources:
          - configmaps
          verbs:
          - get
          - update
      system::nginx-ingress-role:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1beta1","kind":"Role","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/bootstrapping":"rbac-defaults"},"name":"system::nginx-ingress-role","namespace":"kube-system"},"rules":[{"apiGroups":[""],"resources":["configmaps","pods","secrets","namespaces"],"verbs":["get"]},{"apiGroups":[""],"resourceNames":["ingress-controller-leader-nginx"],"resources":["configmaps"],"verbs":["get","update"]},{"apiGroups":[""],"resources":["configmaps"],"verbs":["create"]},{"apiGroups":[""],"resources":["endpoints"],"verbs":["get"]}]}

'
          creationTimestamp: '2019-01-11T15:35:18Z'
          labels:
            addonmanager.kubernetes.io/mode: Reconcile
            kubernetes.io/bootstrapping: rbac-defaults
          name: system::nginx-ingress-role
          namespace: kube-system
          resourceVersion: '389'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system%3A%3Anginx-ingress-role"
          uid: 7fce2b67-15b6-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - ''
          resources:
          - configmaps
          - pods
          - secrets
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ''
          resourceNames:
          - ingress-controller-leader-nginx
          resources:
          - configmaps
          verbs:
          - get
          - update
        - apiGroups:
          - ''
          resources:
          - configmaps
          verbs:
          - create
        - apiGroups:
          - ''
          resources:
          - endpoints
          verbs:
          - get
      system:controller:bootstrap-signer:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system:controller:bootstrap-signer
          namespace: kube-system
          resourceVersion: '140'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system%3Acontroller%3Abootstrap-signer"
          uid: 799efa77-15b6-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - ''
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
      system:controller:cloud-provider:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system:controller:cloud-provider
          namespace: kube-system
          resourceVersion: '141'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system%3Acontroller%3Acloud-provider"
          uid: 79a512ae-15b6-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - ''
          resources:
          - configmaps
          verbs:
          - create
          - get
          - list
          - watch
      system:controller:token-cleaner:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: 'true'
          creationTimestamp: '2019-01-11T15:35:08Z'
          labels:
            kubernetes.io/bootstrapping: rbac-defaults
          name: system:controller:token-cleaner
          namespace: kube-system
          resourceVersion: '143'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system%3Acontroller%3Atoken-cleaner"
          uid: 79ab2bab-15b6-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - ''
          resources:
          - secrets
          verbs:
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - ''
          resources:
          - events
          verbs:
          - create
          - patch
          - update
    opa:
      configmap-modifier:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"configmap-modifier","namespace":"opa"},"rules":[{"apiGroups":[""],"resources":["configmaps"],"verbs":["update","patch"]}]}

'
          creationTimestamp: '2019-01-11T16:29:41Z'
          name: configmap-modifier
          namespace: opa
          resourceVersion: '1704'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/opa/roles/configmap-modifier"
          uid: 18dc450e-15be-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - ''
          resources:
          - configmaps
          verbs:
          - update
          - patch
      view-rbac:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"view-rbac","namespace":"opa"},"rules":[{"apiGroups":["rbac.authorization.k8.io/v1"],"resources":["RoleBinding","Role","ClusterRoleBinding","ClusterRole"],"verbs":["view"]}]}

'
          creationTimestamp: '2019-01-11T17:46:45Z'
          name: view-rbac
          namespace: opa
          resourceVersion: '7727'
          selfLink: "/apis/rbac.authorization.k8s.io/v1/namespaces/opa/roles/view-rbac"
          uid: dca6a578-15c8-11e9-b5fd-0800271e9936
        rules:
        - apiGroups:
          - rbac.authorization.k8.io/v1
          resources:
          - RoleBinding
          - Role
          - ClusterRoleBinding
          - ClusterRole
          verbs:
          - view
  services:
    default:
      kubernetes:
        apiVersion: v1
        kind: Service
        metadata:
          creationTimestamp: '2019-01-11T15:35:05Z'
          labels:
            component: apiserver
            provider: kubernetes
          name: kubernetes
          namespace: default
          resourceVersion: '33'
          selfLink: "/api/v1/namespaces/default/services/kubernetes"
          uid: 7866dc50-15b6-11e9-b5fd-0800271e9936
        spec:
          clusterIP: 10.96.0.1
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          sessionAffinity: ClientIP
          sessionAffinityConfig:
            clientIP:
              timeoutSeconds: 10800
          type: ClusterIP
        status:
          loadBalancer: {}
    kube-system:
      default-http-backend:
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app.kubernetes.io/name":"default-http-backend","app.kubernetes.io/part-of":"kube-system","kubernetes.io/minikube-addons":"ingress","kubernetes.io/minikube-addons-endpoint":"ingress"},"name":"default-http-backend","namespace":"kube-system"},"spec":{"ports":[{"nodePort":30001,"port":80,"targetPort":8080}],"selector":{"app.kubernetes.io/name":"default-http-backend"},"type":"NodePort"}}

'
          creationTimestamp: '2019-01-11T15:35:18Z'
          labels:
            addonmanager.kubernetes.io/mode: Reconcile
            app.kubernetes.io/name: default-http-backend
            app.kubernetes.io/part-of: kube-system
            kubernetes.io/minikube-addons: ingress
            kubernetes.io/minikube-addons-endpoint: ingress
          name: default-http-backend
          namespace: kube-system
          resourceVersion: '392'
          selfLink: "/api/v1/namespaces/kube-system/services/default-http-backend"
          uid: 7fdbc8c8-15b6-11e9-b5fd-0800271e9936
        spec:
          clusterIP: 10.107.127.155
          externalTrafficPolicy: Cluster
          ports:
          - nodePort: 30001
            port: 80
            protocol: TCP
            targetPort: 8080
          selector:
            app.kubernetes.io/name: default-http-backend
          sessionAffinity: None
          type: NodePort
        status:
          loadBalancer: {}
      kube-dns:
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"prometheus.io/scrape":"true"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/name":"CoreDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.96.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}

'
            prometheus.io/scrape: 'true'
          creationTimestamp: '2019-01-11T15:35:09Z'
          labels:
            addonmanager.kubernetes.io/mode: Reconcile
            k8s-app: kube-dns
            kubernetes.io/cluster-service: 'true'
            kubernetes.io/name: CoreDNS
          name: kube-dns
          namespace: kube-system
          resourceVersion: '345'
          selfLink: "/api/v1/namespaces/kube-system/services/kube-dns"
          uid: 7a4f8cf0-15b6-11e9-b5fd-0800271e9936
        spec:
          clusterIP: 10.96.0.10
          ports:
          - name: dns
            port: 53
            protocol: UDP
            targetPort: 53
          - name: dns-tcp
            port: 53
            protocol: TCP
            targetPort: 53
          selector:
            k8s-app: kube-dns
          sessionAffinity: None
          type: ClusterIP
        status:
          loadBalancer: {}
      kubernetes-dashboard:
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"kubernetes-dashboard","kubernetes.io/minikube-addons":"dashboard","kubernetes.io/minikube-addons-endpoint":"dashboard"},"name":"kubernetes-dashboard","namespace":"kube-system"},"spec":{"ports":[{"port":80,"targetPort":9090}],"selector":{"app":"kubernetes-dashboard"}}}

'
          creationTimestamp: '2019-01-11T15:35:17Z'
          labels:
            addonmanager.kubernetes.io/mode: Reconcile
            app: kubernetes-dashboard
            kubernetes.io/minikube-addons: dashboard
            kubernetes.io/minikube-addons-endpoint: dashboard
          name: kubernetes-dashboard
          namespace: kube-system
          resourceVersion: '358'
          selfLink: "/api/v1/namespaces/kube-system/services/kubernetes-dashboard"
          uid: 7f870948-15b6-11e9-b5fd-0800271e9936
        spec:
          clusterIP: 10.100.201.194
          ports:
          - port: 80
            protocol: TCP
            targetPort: 9090
          selector:
            app: kubernetes-dashboard
          sessionAffinity: None
          type: ClusterIP
        status:
          loadBalancer: {}
    opa:
      opa:
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"opa","namespace":"opa"},"spec":{"ports":[{"name":"https","port":443,"protocol":"TCP","targetPort":443}],"selector":{"app":"opa"}}}

'
          creationTimestamp: '2019-01-11T16:29:41Z'
          name: opa
          namespace: opa
          resourceVersion: '1707'
          selfLink: "/api/v1/namespaces/opa/services/opa"
          uid: 18e148ea-15be-11e9-b5fd-0800271e9936
        spec:
          clusterIP: 10.103.40.98
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: 443
          selector:
            app: opa
          sessionAffinity: None
          type: ClusterIP
        status:
          loadBalancer: {}
      opa2:
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"opa2","namespace":"opa"},"spec":{"ports":[{"name":"https","port":443,"protocol":"TCP","targetPort":443}],"selector":{"app":"opa"},"type":"NodePort"}}

'
          creationTimestamp: '2019-01-11T17:06:35Z'
          name: opa2
          namespace: opa
          resourceVersion: '4479'
          selfLink: "/api/v1/namespaces/opa/services/opa2"
          uid: 406a77c6-15c3-11e9-b5fd-0800271e9936
        spec:
          clusterIP: 10.103.38.218
          externalTrafficPolicy: Cluster
          ports:
          - name: https
            nodePort: 32632
            port: 443
            protocol: TCP
            targetPort: 443
          selector:
            app: opa
          sessionAffinity: None
          type: NodePort
        status:
          loadBalancer: {}
